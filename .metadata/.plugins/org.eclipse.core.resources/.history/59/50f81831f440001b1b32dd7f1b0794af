package com.laptrinhJavaWeb.dao.impl;

import java.util.List;

import com.laptrinhJavaWeb.dao.InewDAO;
import com.laptrinhJavaWeb.mapper.NewMapper;
import com.laptrinhJavaWeb.model.newsModel;
import com.laptrinhJavaWeb.paging.pageble;

public class newDAO extends AbstrachDAO<newsModel> implements InewDAO {

	@Override
	public List<newsModel> findByCategoryId(Long categoryId) {

		String sql = "select * from news where categoriesid = ?";
		return query(sql, new NewMapper(), categoryId);

	}

	@Override
	public Long save(newsModel newsModel) {
		// TODO Auto-generated method stub
		String sql = "insert into news(title, thumbnail , shortDescription ,content, categoriesid,createddate,createdby) values(?,?,?,?,?,?,?)";
		return insert(sql.toString(), newsModel.getTitle(), newsModel.getThumbnail(), newsModel.getShortDescription(),
				newsModel.getContent(), newsModel.getCategoriesId(), newsModel.getCreatedDate(),
				newsModel.getCrreatedBy());

	}

	@Override
	public newsModel findone(Long id) {
		// TODO Auto-generated method stub
		String sql = "select * from news where id = ?";
		List<newsModel> news = query(sql, new NewMapper(), id);
		return news.isEmpty() ? null : news.get(0);
	}

	@Override
	public void update(newsModel updateNew) {
		// TODO Auto-generated method stub
		StringBuilder sql = new StringBuilder("UPDATE news SET title = ?, thumbnail = ?,");
		sql.append(" shortDescription = ?, content = ?, categoriesid = ?,");
		sql.append(" createddate = ?, modifieddate = ? , createdby = ? , modifiedby = ? WHERE id = ?");

		update(sql.toString(), updateNew.getTitle(), updateNew.getThumbnail(), updateNew.getShortDescription(),
				updateNew.getContent(), updateNew.getCategoriesId(), updateNew.getCreatedDate(),
				updateNew.getModifiedDate(), updateNew.getCrreatedBy(), updateNew.getModifiedBy(), updateNew.getId());

	}

	@Override
	public void delete(long id) {
		// TODO Auto-generated method stub
		String sql = "delete from news where id = ?";
		update(sql, id);

	}

	@Override
	public List<newsModel> findAll(pageble pageble) {
//		String sql = "select * from news limit ?,?";
		StringBuilder sql = new StringBuilder("select * from news");
		if (pageble.getSorter() != null) {
			sql.append(" order by "+sortName+" "+sortBy);
		}
		if (pageble.getPage() != null && pageble.getLimit() != null) {
			sql.append(" limit " + pageble.getPage() + "," + pageble.getLimit());
		}
		return query(sql.toString(), new NewMapper());

	}

	@Override
	public int getTotalItem() {
		String sql = "select count(*) from news";
		return queryCount(sql.toString());
	}

}
